import{_ as e,c as o,a2 as t,o as i}from"./chunks/framework.CzToka2B.js";const u=JSON.parse('{"title":"Define Schema","description":"","frontmatter":{},"headers":[],"relativePath":"guide/schema.md","filePath":"guide/schema.md","lastUpdated":1729038975000}'),l={name:"guide/schema.md"};function n(r,a,s,c,h,m){return i(),o("div",null,a[0]||(a[0]=[t('<h1 id="define-schema" tabindex="-1">Define Schema <a class="header-anchor" href="#define-schema" aria-label="Permalink to &quot;Define Schema&quot;">​</a></h1><h2 id="summary" tabindex="-1">Summary <a class="header-anchor" href="#summary" aria-label="Permalink to &quot;Summary&quot;">​</a></h2><p>We need to define schema for the validation process and each schema will contain its own rules, types-casts and other utilities.</p><h2 id="table-of-contents" tabindex="-1">Table of Contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of Contents&quot;">​</a></h2><ul><li><a href="#hello-schema">Hello Schema</a></li><li><a href="#array">Array</a></li><li><a href="#object">Object</a></li><li><a href="#string">String</a></li><li><a href="#number">Number</a></li><li><a href="#enum">Enum</a></li><li><a href="#boolean">Boolean</a></li><li><a href="#conclusion">Conclusion</a></li></ul><h2 id="hello-schema" tabindex="-1">Hello Schema <a class="header-anchor" href="#hello-schema" aria-label="Permalink to &quot;Hello Schema&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">INFO</p><p>We are wotking on it.</p></div><h2 id="array" tabindex="-1">Array <a class="header-anchor" href="#array" aria-label="Permalink to &quot;Array&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">INFO</p><p>We are wotking on it.</p></div><h2 id="object" tabindex="-1">Object <a class="header-anchor" href="#object" aria-label="Permalink to &quot;Object&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">INFO</p><p>We are wotking on it.</p></div><h2 id="string" tabindex="-1">String <a class="header-anchor" href="#string" aria-label="Permalink to &quot;String&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">INFO</p><p>We are wotking on it.</p></div><h2 id="number" tabindex="-1">Number <a class="header-anchor" href="#number" aria-label="Permalink to &quot;Number&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">INFO</p><p>We are wotking on it.</p></div><h2 id="enum" tabindex="-1">Enum <a class="header-anchor" href="#enum" aria-label="Permalink to &quot;Enum&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">INFO</p><p>We are wotking on it.</p></div><h2 id="boolean" tabindex="-1">Boolean <a class="header-anchor" href="#boolean" aria-label="Permalink to &quot;Boolean&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">INFO</p><p>We are wotking on it.</p></div><h2 id="conclusion" tabindex="-1">Conclusion <a class="header-anchor" href="#conclusion" aria-label="Permalink to &quot;Conclusion&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">INFO</p><p>We are wotking on it.</p></div>',21)]))}const b=e(l,[["render",n]]);export{u as __pageData,b as default};
